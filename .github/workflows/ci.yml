name: Continuous Integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
env:
  DJANGO_SECRET_KEY: "super-secret-ci-key"
  REDIS_HOST: "localhost"
  DATABASE_URL: "postgres://postgres:password@localhost:5432/postgres"



jobs:
 test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.6
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7.4-alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.12.2
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.2

      - name: Set up Node 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: 1.8.2

      - name: Cache poetry
        uses: actions/cache@v3
        id: cache-poetry
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential curl gettext git google-chrome-stable

      - name: Install Python Dependencies
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        run: poetry install

      - name: Ensure browsers are installed
        run: poetry run python -m playwright install --with-deps

      - name: Install Tailwind
        run: poetry run python manage.py tailwind install --no-input

      - name: Build Tailwind
        run: poetry run python manage.py tailwind build --no-input

      - name: Collect static files
        run: poetry run python manage.py collectstatic --noinput

      - name: Run migrations
        run: poetry run python manage.py migrate

      - name: Test with pytest (coverage)
        run: poetry run pytest --cov={{project_name}}  --cov-config=.coveragerc --cov-fail-under=85  --cov-report term-missing:skip-covered

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12.2
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.2

      - name: Install System Dependencies
        run: sudo apt-get update && sudo apt-get install -y --no-install-recommends build-essential curl gettext git
       pre-commit/action@v3.0.0
